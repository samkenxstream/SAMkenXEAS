{"version":3,"file":"importMetroFromProject.js","names":["MetroImportError","Error","constructor","projectRoot","moduleId","resolveFromProject","resolvedPath","resolveFrom","silent","importFromProject","require","importMetroSourceMapComposeSourceMapsFromProject","importMetroConfigFromProject","importMetroFromProject","importMetroServerFromProject","importCliServerApiFromProject","importInspectorProxyServerFromProject","importExpoMetroConfigFromProject","importHermesCommandFromProject","platformExecutable","getHermesCommandPlatform","os","platform"],"sources":["../../src/metro/importMetroFromProject.ts"],"sourcesContent":["import type Metro from 'metro';\nimport type MetroConfig from 'metro-config';\nimport type { composeSourceMaps } from 'metro-source-map';\nimport os from 'os';\nimport resolveFrom from 'resolve-from';\n\nclass MetroImportError extends Error {\n  constructor(projectRoot: string, moduleId: string) {\n    super(\n      `Missing package \"${moduleId}\" in the project at: ${projectRoot}\\n` +\n        'This usually means `react-native` is not installed. ' +\n        'Please verify that dependencies in package.json include \"react-native\" ' +\n        'and run `yarn` or `npm install`.'\n    );\n  }\n}\n\nfunction resolveFromProject(projectRoot: string, moduleId: string) {\n  const resolvedPath = resolveFrom.silent(projectRoot, moduleId);\n  if (!resolvedPath) {\n    throw new MetroImportError(projectRoot, moduleId);\n  }\n  return resolvedPath;\n}\n\nfunction importFromProject(projectRoot: string, moduleId: string) {\n  return require(resolveFromProject(projectRoot, moduleId));\n}\n\nexport function importMetroSourceMapComposeSourceMapsFromProject(\n  projectRoot: string\n): typeof composeSourceMaps {\n  return importFromProject(projectRoot, 'metro-source-map/src/composeSourceMaps');\n}\n\nexport function importMetroConfigFromProject(projectRoot: string): typeof MetroConfig {\n  return importFromProject(projectRoot, 'metro-config');\n}\n\nexport function importMetroFromProject(projectRoot: string): typeof Metro {\n  return importFromProject(projectRoot, 'metro');\n}\n\nexport function importMetroServerFromProject(projectRoot: string): typeof Metro.Server {\n  return importFromProject(projectRoot, 'metro/src/Server');\n}\n\nexport function importCliServerApiFromProject(\n  projectRoot: string\n): typeof import('@react-native-community/cli-server-api') {\n  return importFromProject(projectRoot, '@react-native-community/cli-server-api');\n}\n\nexport function importInspectorProxyServerFromProject(projectRoot: string): {\n  InspectorProxy: any;\n} {\n  return importFromProject(projectRoot, 'metro-inspector-proxy');\n}\n\nexport function importExpoMetroConfigFromProject(\n  projectRoot: string\n): typeof import('@expo/metro-config') {\n  return importFromProject(projectRoot, '@expo/metro-config');\n}\n\nexport function importHermesCommandFromProject(projectRoot: string): string {\n  const platformExecutable = getHermesCommandPlatform();\n  return resolveFromProject(projectRoot, `hermes-engine/${platformExecutable}`);\n}\n\nfunction getHermesCommandPlatform(): string {\n  switch (os.platform()) {\n    case 'darwin':\n      return 'osx-bin/hermesc';\n    case 'linux':\n      return 'linux64-bin/hermesc';\n    case 'win32':\n      return 'win64-bin/hermesc.exe';\n    default:\n      throw new Error(`Unsupported host platform for Hermes compiler: ${os.platform()}`);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;AAGA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAEA,MAAMA,gBAAN,SAA+BC,KAA/B,CAAqC;EACnCC,WAAW,CAACC,WAAD,EAAsBC,QAAtB,EAAwC;IACjD,MACG,oBAAmBA,QAAS,wBAAuBD,WAAY,IAAhE,GACE,sDADF,GAEE,yEAFF,GAGE,kCAJJ;EAMD;;AARkC;;AAWrC,SAASE,kBAAT,CAA4BF,WAA5B,EAAiDC,QAAjD,EAAmE;EACjE,MAAME,YAAY,GAAGC,sBAAA,CAAYC,MAAZ,CAAmBL,WAAnB,EAAgCC,QAAhC,CAArB;;EACA,IAAI,CAACE,YAAL,EAAmB;IACjB,MAAM,IAAIN,gBAAJ,CAAqBG,WAArB,EAAkCC,QAAlC,CAAN;EACD;;EACD,OAAOE,YAAP;AACD;;AAED,SAASG,iBAAT,CAA2BN,WAA3B,EAAgDC,QAAhD,EAAkE;EAChE,OAAOM,OAAO,CAACL,kBAAkB,CAACF,WAAD,EAAcC,QAAd,CAAnB,CAAd;AACD;;AAEM,SAASO,gDAAT,CACLR,WADK,EAEqB;EAC1B,OAAOM,iBAAiB,CAACN,WAAD,EAAc,wCAAd,CAAxB;AACD;;AAEM,SAASS,4BAAT,CAAsCT,WAAtC,EAA+E;EACpF,OAAOM,iBAAiB,CAACN,WAAD,EAAc,cAAd,CAAxB;AACD;;AAEM,SAASU,sBAAT,CAAgCV,WAAhC,EAAmE;EACxE,OAAOM,iBAAiB,CAACN,WAAD,EAAc,OAAd,CAAxB;AACD;;AAEM,SAASW,4BAAT,CAAsCX,WAAtC,EAAgF;EACrF,OAAOM,iBAAiB,CAACN,WAAD,EAAc,kBAAd,CAAxB;AACD;;AAEM,SAASY,6BAAT,CACLZ,WADK,EAEoD;EACzD,OAAOM,iBAAiB,CAACN,WAAD,EAAc,wCAAd,CAAxB;AACD;;AAEM,SAASa,qCAAT,CAA+Cb,WAA/C,EAEL;EACA,OAAOM,iBAAiB,CAACN,WAAD,EAAc,uBAAd,CAAxB;AACD;;AAEM,SAASc,gCAAT,CACLd,WADK,EAEgC;EACrC,OAAOM,iBAAiB,CAACN,WAAD,EAAc,oBAAd,CAAxB;AACD;;AAEM,SAASe,8BAAT,CAAwCf,WAAxC,EAAqE;EAC1E,MAAMgB,kBAAkB,GAAGC,wBAAwB,EAAnD;EACA,OAAOf,kBAAkB,CAACF,WAAD,EAAe,iBAAgBgB,kBAAmB,EAAlD,CAAzB;AACD;;AAED,SAASC,wBAAT,GAA4C;EAC1C,QAAQC,aAAA,CAAGC,QAAH,EAAR;IACE,KAAK,QAAL;MACE,OAAO,iBAAP;;IACF,KAAK,OAAL;MACE,OAAO,qBAAP;;IACF,KAAK,OAAL;MACE,OAAO,uBAAP;;IACF;MACE,MAAM,IAAIrB,KAAJ,CAAW,kDAAiDoB,aAAA,CAAGC,QAAH,EAAc,EAA1E,CAAN;EARJ;AAUD"}